# global parameters
management_ip: &management 127.0.0.1
public_ip: &public 10.64.30.31
punlic_address: &public_address 10.64.30.31/24
gateway: &gateway 10.64.30.1
subnet: &subnet 10.64.30.0/24
dns: &dns 8.8.8.8
password: &password abdoul
root: &root /home/alex/openstack.build                            # project build folder
credentials: &credentials /home/alex/openstack.build/openrc       # file with OpenStack credentials

# for configuration options refer to module README.md
network:
  ip_forwarding: true
  ip_v6: false

  interfaces:  
    vlan30:
      ip: *public_address
      hostname: openstack
      comment: OpenStack Server

#    br-ex:
#      members: 
#        - wlp2s0
#      ip: *public_address
#      gateway: *gateway
#      dns: *dns       
#      mtu: 1500                   
#      hostname: openstack
#      comment: OpenStack server


ntp:
  timezone: Europe/Kiev
  servers:
    - *gateway


apache:
  modules:
    - ssl
    - proxy_uwsgi
    - proxy_http
    - wsgi

  certificate:
    valid_days: 365
    country_code: UA
    country: Ukraine
    city: Kiev
    organization: Organization


mariadb:
  bind_address: *management
  version: 10.5
  password: *password


memcached:
  bind_address: *management


rabbitmq:
  bind_address: *management
  user: root
  password: *password


prometheus:
  version: 2.16.0
  retention: 7d
  listen: *public
  alertmanager:                 # optional - look at module README.md
    version: 0.20.0
    openstack_credentials: *credentials


nfs-server:
  root: /exports


openstack:
  release: stable/ussuri
# release: stable/train
  region: RegionUA
  domain: Organisation
  project: Cloud
  root: *root
  credentials: *credentials
  management_ip: *management
  public_ip: *public
  password: *password
  metadata_secret: 503a3a3b33316b93f79d               # openssl rand -hex 10
  logs_dir: '/var/log/openstack'
  service_dir: '/var/lib/openstack'
  

  logrotate:
    threshold: daily
    keep: 1                                           # how many logs to keep

  services:
    keystone:

    glance: 
      images:
        cirros-0.4.0-x86_64:
          link: http://download.cirros-cloud.net/0.4.0/cirros-0.4.0-x86_64-disk.img
          type: cirros.demo
        cirros-0.5.1-x86_64:
          link: http://download.cirros-cloud.net/0.5.1/cirros-0.5.1-x86_64-disk.img
          type: cirros.demo
        ubuntu-18.04-minimal-amd64:
          distribution: ubuntu
	  #link: https://cloud-images.ubuntu.com/minimal/releases/bionic/release/ubuntu-18.04-minimal-cloudimg-amd64.img
          release: bionic
          type: linux
          min_disk: 4          
        debian-10.3.0-amd64:
          link: https://cdimage.debian.org/cdimage/openstack/current-10/debian-10-openstack-amd64.qcow2
          type: linux
          min_disk: 4
    
    placement:

    cinder: 
      nfs:
        volume: /exports/instances
        backup: /exports/backup

    neutron:
      kernel_modules:
        - bridge
        - br_netfilter
      provider:
        range: *subnet
        gateway: *gateway
        dns: *dns

    nova:
      hypervisor: kvm                                     # any other options doesnt supported by this module
      cpu_mode: host-passthrough                          # none, host-model, host-passthrough
      console: spice-html5                                # any other options doesnt supported by this module

    murano: 
      images:
        ubuntu-18.04-minimal-murano-amd64:
          distribution: ubuntu  
          release: bionic
          type: linux
          min_disk: 4          

    heat:   
      domain_admin: heat_admin
      domain_admin_pass: *password
    
    horizon:
      plugins:
        heat-dashboard:
          check: orchestration
          settings: _1699_orchestration_settings.py
        
        neutron-fwaas-dashboard:  
          check: firewalls
          settings: _7000_neutron_fwaas.py

        neutron-vpnaas-dashboard:  
          check: vpn_panel
          settings: _7100_project_vpn_panel.py

        murano-dashboard:
          check: muranodashboard
          settings: _50_murano.py  
        
    gnocchi:

    ceilometer:
      # polling interval in seconds. accepted values are: 300, 60, 1
      # corresponding to 'low', 'medium' and 'high' archive policys from gnocchi_resources.yaml
      polling_interval: 60

    aodh:

    postinstall:
            
